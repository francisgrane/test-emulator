name: Android Emulator Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  android-integration-tests:
    runs-on: macos-latest
    env:
      AVD_NAME: test_emulator
      ANDROID_SDK_ROOT: $HOME/Library/Android/sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'

      - name: Install Android SDK command-line tools
        run: |
          # Create Android SDK directory if it doesn't exist
          mkdir -p $ANDROID_SDK_ROOT
          
          # Download and unzip command-line tools
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip
          unzip sdk-tools.zip -d $ANDROID_SDK_ROOT
          rm sdk-tools.zip
          
          # Verify the directory structure
          ls -la $ANDROID_SDK_ROOT

          # Ensure correct structure by moving the necessary files
          if [ -d "$ANDROID_SDK_ROOT/cmdline-tools/tools/bin" ]; then
            echo "Found existing 'tools' directory, moving to 'latest'"
            mv $ANDROID_SDK_ROOT/cmdline-tools/tools/* $ANDROID_SDK_ROOT/cmdline-tools/
            rm -rf $ANDROID_SDK_ROOT/cmdline-tools/tools
          fi

          # Accept licenses and install necessary SDK components
          yes | $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager "platform-tools" "platforms;android-30" "emulator" "system-images;android-30;google_apis;x86_64"

      - name: Set Android SDK tools in PATH
        run: |
          echo "$ANDROID_SDK_ROOT/emulator" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/bin" >> $GITHUB_PATH

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n $AVD_NAME -k "system-images;android-30;google_apis;x86_64" --device "pixel" --force

      - name: Start emulator and wait for boot
        run: |
          nohup $ANDROID_SDK_ROOT/emulator/emulator -avd $AVD_NAME -no-audio -no-window -gpu swiftshader_indirect &
          echo "Waiting for emulator to boot..."
          boot_completed=""
          until [[ "$boot_completed" == "1" ]]; do
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            sleep 5
          done
          echo "Emulator is ready!"

      - name: Run Flutter integration tests
        run: flutter test integration_test
